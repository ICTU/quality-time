---
name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  containers:
    name: Push container images to Docker Hub
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - component: api_server
            context: components
            file: components/api_server/Dockerfile
          - component: collector
            context: components
            file: components/collector/Dockerfile
          - component: database
            context: components/database
            file:
          - component: frontend
            context: components/frontend
            file:
          - component: notifier
            context: components
            file: components/notifier/Dockerfile
          - component: proxy
            context: components/proxy
            file:
          - component: renderer
            context: components/renderer
            file:
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push ${{ matrix.component }} to Docker Hub
        uses: docker/build-push-action@v6.18.0
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.file }}
          platforms: linux/amd64,linux/arm64
          tags: ictu/quality-time_${{ matrix.component }}:${{ github.ref_name }}
          sbom: true
          push: true
          provenance: mode=max
  finalize:
    name: Finalize release
    needs: containers
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Helm chart to Docker Hub
        run: |
          cd helm
          helm package .
          helm push quality-time-*.tgz oci://registry-1.docker.io/ictu
      - name: Generate changes for this release
        run: release/latest_release_changelog.py docs/src/changelog.md > ${{ github.workspace }}-CHANGELOG.txt
      - name: Create GitHub release
        uses: softprops/action-gh-release@v2
        with:
          prerelease: ${{ contains(github.ref_name, 'rc') }}
          body_path: ${{ github.workspace }}-CHANGELOG.txt
