version: 2.1

orbs:
  docker: circleci/docker@2.1.2

jobs:
  unittest_backend:
    docker:
      - image: cimg/python:3.11.3
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    parallelism: 6
    steps:
      - checkout
      - run: |
          case $CIRCLE_NODE_INDEX in
            0) component=components/collector;;
            1) component=components/notifier;;
            2) component=components/external_server;;
            3) component=components/shared_data_model;;
            4) component=components/shared_server_code;;
            5) component=tests/feature_tests;;
          esac
          cd $component
          python -m venv venv
          . venv/bin/activate
          ci/pip-install.sh
          ci/unittest.sh
          ci/quality.sh

  unittest_frontend:
    docker:
      - image: cimg/node:lts
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run: |
          cd components/frontend
          npm install
          npm test

  unittest_docs:
    machine:
      image: ubuntu-2204:2023.04.2
    steps:
      - checkout
      - run: |
          cd docs
          npm install
          python3 -m venv venv
          . venv/bin/activate
          ci/pip-install.sh
          ci/unittest.sh
          ci/quality.sh

  application_tests:
    machine:
      image: ubuntu-2004:current
    parallelism: 1
    steps:
      - checkout
      - run: |
          mkdir -p build
          export ENV=ci
          export QUALITY_TIME_VERSION=v4.10.0
          export COMPOSE_PATH_SEPARATOR=':'
          export COMPOSE_FILE=docker/docker-compose.yml:docker/docker-compose.ci.yml
          docker compose build && docker compose up -d
          docker run -it -w `pwd` -v `pwd`:`pwd` --network=container:quality-time-www-1 python:3.11.4-bullseye tests/application_tests/ci/test.sh
          docker compose logs > build/containers.log
      - run:
          name: Save container logs on failure
          when: on_fail
          command: docker compose logs > build/containers.log
      - store_artifacts:
          path: build
    # The resource_class feature allows configuring CPU and RAM resources for each job. Different resource classes are available for different executors. https://circleci.com/docs/2.0/configuration-reference/#resourceclass
    resource_class: large

  feature_tests:
    machine:
      image: ubuntu-2004:current
    parallelism: 1
    steps:
      - checkout
      - run: |
          ./tests/feature_tests/ci/test.sh
      - store_artifacts:
          path: build

workflows:
  version: 2
  build_test:
    jobs:
      - application_tests:
          context: QualityTime
      - feature_tests:
          context: QualityTime
      - unittest_backend:
          context: QualityTime
      - unittest_frontend:
          context: QualityTime
      - unittest_docs:
          context: QualityTime
      - docker/hadolint:
          context: QualityTime
          dockerfiles: "components/collector/Dockerfile:\
            components/database/Dockerfile:\
            components/external_server/Dockerfile:\
            components/frontend/Dockerfile:\
            components/notifier/Dockerfile:\
            components/proxy/Dockerfile:\
            components/renderer/Dockerfile:\
            components/testdata/Dockerfile"
