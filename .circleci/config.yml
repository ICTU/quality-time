version: 2

jobs:
  unittest_backend:
    docker:
      - image: cimg/python:3.9.6
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    parallelism: 3
    steps:
      - checkout
      - run: |
          case $CIRCLE_NODE_INDEX in
          	0) component=collector;;
          	1) component=notifier;;
          	2) component=server;;
          esac
          cd components/$component
          python -m venv venv
          . venv/bin/activate
          pip install wheel
          pip install --progress-bar off -r requirements.txt -r requirements-dev.txt
          ci/unittest.sh
          ci/quality.sh

  unittest_frontend:
    docker:
      - image: cimg/node:lts
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run:
          command: |
            cd components/frontend
            npm install
            npm test

  unittest_docs:
    docker:
      - image: cimg/python:3.9.6-node
    steps:
      - checkout
      - run: |
          cd docs
          python -m venv venv
          . venv/bin/activate
          pip install wheel
          pip install --progress-bar off -r requirements-dev.txt
          npm install
          ci/unittest.sh
          ci/quality.sh

  application_tests:
    machine: true
    parallelism: 1
    steps:
      - checkout
      - run: |
          export ENV=ci
          export COMPOSE_PATH_SEPARATOR=':'
          export COMPOSE_FILE=docker/docker-compose.yml:docker/docker-compose.ci.yml
          docker-compose build && docker-compose up -d
          docker run -it -w `pwd` -v `pwd`:`pwd` --network=container:qualitytime_www_1 circleci/python:3.10.0rc1-browsers tests/application_tests/ci/test.sh

  feature_tests:
    docker:
      - image: cimg/python:3.9.6
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
      - image: ictu/quality-time_testldap:v3.26.0
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
      - image: ictu/quality-time_renderer:v3.26.0
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
        environment:
          ALLOW_HTTP: true
          LC_ALL: en_GB.UTF-8
      - image: ictu/quality-time_frontend:v3.26.0
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
      - image: ictu/quality-time_database:v3.26.0
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
        environment:
          MONGO_INITDB_ROOT_USERNAME: root
          MONGO_INITDB_ROOT_PASSWORD: root
    steps:
      - checkout
      - run:
          working_directory: components/server
          command: |
            mkdir -p /tmp/log
            python3 -m venv venv
            . venv/bin/activate
            pip install --progress-bar off -r requirements.txt -r requirements-dev.txt &>> /tmp/log/pip.log
      - run:
          background: true
          working_directory: components/server
          command: |
            . venv/bin/activate
            export RENDERER_HOST=localhost
            export PROXY_HOST=localhost
            export PROXY_PORT=5000
            export COVERAGE_RCFILE=../../tests/feature_tests/.coveragerc
            python tests/quality_time_server_under_coverage.py &>> /tmp/log/server.log
      - run:
          command: |
            cd tests/feature_tests
            python3 -m venv venv
            . venv/bin/activate
            pip --quiet install --progress-bar off -r requirements-dev.txt
            cd ../..
            export COVERAGE_RCFILE=tests/feature_tests/.coveragerc
            coverage run -m behave --format progress tests/feature_tests
            kill -s TERM "$(pgrep -n -f tests/quality_time_server_under_coverage.py)"
            sleep 2  # Give the server time to write the coverage data
            coverage combine . components/server
            coverage html
            coverage report
      - store_artifacts:
          path: /tmp/log
      - store_artifacts:
          path: build/features-coverage

workflows:
  version: 2
  build_test:
    jobs:
      - application_tests:
          context: QualityTime
      - feature_tests:
          context: QualityTime
      - unittest_backend:
          context: QualityTime
      - unittest_frontend:
          context: QualityTime
      - unittest_docs:
          context: QualityTime
