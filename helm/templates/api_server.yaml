---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ template "api_server_name" . }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: {{ template "api_server_name" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: {{ template "api_server_name" . }}
  strategy: {}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: {{ template "api_server_name" . }}
    spec:
      containers:
        - name: {{ template "api_server_name" . }}
          image: "{{ .Values.api_server.image.repository }}:{{ .Values.api_server.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-{{ template "api_server_name" . }}-env
                optional: true
          env:
            - name: DATABASE_HOST
              value: {{ .Release.Name }}-{{ template "database_name" . }}
            - name: DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.dbCredential }}
                  key: DATABASE_USERNAME
                  optional: true
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.dbCredential }}
                  key: DATABASE_PASSWORD
                  optional: true
            - name: LDAP_LOOKUP_USER_DN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.ldapCredential }}
                  key: LDAP_LOOKUP_USER_DN
                  optional: true
            - name: LDAP_LOOKUP_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.ldapCredential }}
                  key: LDAP_LOOKUP_USER_PASSWORD
                  optional: true
            - name: LDAP_SEARCH_FILTER  # override to make sure that double dollar signs are processed like in docker
              value: {{ .Values.api_server.env.LDAP_SEARCH_FILTER }}
{{- with .Values.api_server.resources }}
          resources: {{- toYaml . | nindent 12 }}
{{- end }}
          securityContext:
            capabilities:
              drop:
                - ALL
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-{{ template "api_server_name" . }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: {{ template "api_server_name" . }}
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: {{ template "api_server_name" . }}
  ports:
    - protocol: TCP
      port: 5001
      targetPort: 5001
  sessionAffinity: None
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-{{ template "api_server_name" . }}-env
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: {{ template "api_server_name" . }}
data:
{{- range $key, $val := .Values.api_server.env }}
  {{ $key }}: "{{ $val }}"
{{- end }}
