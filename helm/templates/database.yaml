---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ template "database_name" . }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: {{ template "database_name" }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: {{ template "database_name" . }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: {{ template "database_name" . }}
    spec:
      volumes:
        - name: {{ .Release.Name }}-{{ template "database_name" . }}
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-{{ template "database_name" . }}
        {{- if .Values.database.backupVol }}
        - name: backups
          persistentVolumeClaim:
            claimName: {{ .Values.database.backupVol.claimName }}
        {{- end }}
      containers:
        - name: {{ template "database_name" . }}
          image: "{{ .Values.database.image.repository }}:{{ .Values.database.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-{{ template "database_name" . }}-env
                optional: true
          env:
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.dbCredential }}
                  key: DATABASE_USERNAME
                  optional: true
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.dbCredential }}
                  key: DATABASE_PASSWORD
                  optional: true
{{- with .Values.database.resources }}
          resources: {{- toYaml . | nindent 12 }}
{{- end }}
          securityContext:
            capabilities:
              add:
                - CHOWN
                - DAC_OVERRIDE
                - SETGID
                - SETUID
              drop:
                - ALL
          volumeMounts:
            - mountPath: /data/db
              name: {{ .Release.Name }}-{{ template "database_name" . }}
            {{- if .Values.database.backupVol }}
            - mountPath: {{ .Values.database.backupVol.mountPath }}
              name: backups
            {{- end }}
      restartPolicy: Always
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-{{ template "database_name" . }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: {{ template "database_name" }}
  annotations:
    helm.sh/resource-policy: "keep"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.database.storageSize | default "1Gi" | quote }}
{{- if .Values.database.storageClassName }}
  storageClassName: {{ .Values.database.storageClassName | quote }}
{{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-{{ template "database_name" . }}
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: {{ template "database_name" }}
spec:
  type: ClusterIP
  selector:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: {{ template "database_name" . }}
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  sessionAffinity: None
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-{{ template "database_name" . }}-env
  labels:
    app.kubernetes.io/name: {{ .Chart.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: {{ template "database_name" . }}
data:
{{- range $key, $val := .Values.database.env }}
  {{ $key }}: "{{ $val }}"
{{- end }}
