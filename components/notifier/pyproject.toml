[project]
name = "notifier"
version = "5.37.0-rc.2"
requires-python = ">=3.13"
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.13",
]
dependencies = [
    "aiohttp==3.12.14",
    "pymsteams==0.2.5",
    "shared-code",
]

optional-dependencies.dev = [
    "coverage==7.10.2",
    "mongomock==4.3.0",
    "pydantic==2.11.7",              # Needed for importing the data model in the tests from the shared code component
    "unittest-xml-reporting==3.2.0", # Needed to generate JUnit XML output for Sonarcloud.io
]
optional-dependencies.tools = [
    "bandit==1.8.6",
    "fixit==2.1.0",
    "mypy==1.17.1",
    "pip-audit==2.9.0",
    "pyproject-fmt==2.6.0",
    "ruff==0.12.7",
    "vulture==2.14",
]

[tool.ruff]
line-length = 120
src = [
    "src",
]
lint.select = [
    "ALL",
]
lint.ignore = [
    "COM812", # https://docs.astral.sh/ruff/rules/missing-trailing-comma/ - this rule may cause conflicts when used with the ruff formatter
    "D203",   # https://docs.astral.sh/ruff/rules/one-blank-line-before-class/ - prevent warning: `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible. Ignoring `one-blank-line-before-class`
    "D213",   # https://docs.astral.sh/ruff/rules/multi-line-summary-second-line/ - prevent warning: `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible. Ignoring `multi-line-summary-second-line`
    "FBT",    # https://docs.astral.sh/ruff/rules/#flake8-boolean-trap-fbt - not sure of the value of preventing "boolean traps"
    "ISC001", # https://docs.astral.sh/ruff/rules/single-line-implicit-string-concatenation/ - this rule may cause conflicts when used with the ruff formatter
    "PT",     # https://docs.astral.sh/ruff/rules/#flake8-pytest-style-pt - pytest isn't used
    "TC006",  # https://docs.astral.sh/ruff/rules/runtime-cast-value/ - the rule claims it's often necessary to quote the first argument passed to cast(), but that's not the case in this code base
]
lint.per-file-ignores.".vulture_ignore_list.py" = [
    "ALL",
]
lint.per-file-ignores."__init__.py" = [
    "D104", # https://docs.astral.sh/ruff/rules/undocumented-public-package/ - don't require doc strings in __init__.py files
]
lint.per-file-ignores."src/quality_time_notifier.py" = [
    "INP001", # https://docs.astral.sh/ruff/rules/implicit-namespace-package/ - false positive because this is the main script
]
lint.per-file-ignores."tests/**/*.py" = [
    "ANN201", # https://docs.astral.sh/ruff/rules/missing-return-type-undocumented-public-function/ - don't require test functions to have return types
]
lint.isort.section-order = [
    "future",
    "standard-library",
    "third-party",
    "second-party",
    "first-party",
    "tests",
    "local-folder",
]
lint.isort.sections."second-party" = [
    "shared",
    "shared_data_model",
]
lint.isort.sections."tests" = [
    "tests",
]

[tool.pyproject-fmt]
indent = 4
keep_full_version = true # Don't remove trailing zero's from version specifiers

[tool.mypy]
ignore_missing_imports = false
incremental = false
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = [
    "pymsteams",
]
ignore_missing_imports = true

[tool.uv.sources]
shared-code = { path = "../shared_code", package = true }
