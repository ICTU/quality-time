dist: xenial
services:
  - docker

jobs:
  include:
    - stage: test
      name: "Collector unit tests"
      language: python
      python: 3.8
      install:
      - cd components/collector
      - pip install -r requirements.txt -r requirements-dev.txt
      script:
      - ci/unittest.sh
      - ci/quality.sh

    - name: "Server unit tests"
      language: python
      python: 3.8
      install:
      - cd components/server
      - pip install -r requirements.txt -r requirements-dev.txt
      script:
      - ci/unittest.sh
      - ci/quality.sh

    - name: "Frontend unit tests"
      language: node_js
      node_js: "10"
      install:
      - cd components/frontend
      - npm install
      script:
      - npm test

    - name: "SonarQube"
      language: python
      python: 3.8
      git:
        depth: false
      addons:
        sonarcloud:
          organization: "ictu"
      before_install:
      - nvm install 10
      install:
      - cd components/collector
      - pip install -r requirements.txt -r requirements-dev.txt
      - cd ../../components/server
      - pip install -r requirements.txt -r requirements-dev.txt
      - cd ../../components/frontend
      - npm install
      - cd ../..
      script:
      - cd components/collector
      - mkdir build
      - ci/unittest.sh
      - nosetests --nocapture --with-xunit --xunit-file=build/nosetests.xml tests/unittests
      - cd ../../components/server
      - mkdir build
      - ci/unittest.sh
      - nosetests --nocapture --with-xunit --xunit-file=build/nosetests.xml tests/unittests
      - cd ../../components/frontend
      - npm test -- --coverage
      - cd ../..
      - touch components/__init__.py
      - touch components/server/__init__.py
      - touch components/server/src/__init__.py
      - touch components/collector/__init__.py
      - touch components/collector/src/__init__.py
      - sonar-scanner

    - stage: deploy
      name: "Build containers and deploy"
      language: minimal
      if: tag IS present
      install:
      - export ENV=ci
      - export COMPOSE_FILE=docker/docker-compose.yml:docker/docker-compose.ci.yml
      - docker-compose build
      - docker images
      deploy:
      - provider: script
        skip_cleanup: true
        on:
          tags: true
        script: >-
          docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD" &&
          docker push ictu/quality-time_collector:$TRAVIS_TAG &&
          docker push ictu/quality-time_server:$TRAVIS_TAG &&
          docker push ictu/quality-time_frontend:$TRAVIS_TAG  # https://github.com/travis-ci/dpl/issues/673
