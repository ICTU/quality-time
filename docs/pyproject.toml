[project]
name = "docs"
version = "5.5.0"
dependencies = [
    "furo==2023.9.10",
    "gitpython==3.1.38",
    "myst-parser==2.0.0",
    "pydantic==2.5.2",  # Needed for generating the reference docs from the data model
    "Sphinx==7.2.6",
    "sphinx-copybutton==0.5.2",
    "sphinx_design==0.5.0"
]

[project.optional-dependencies]
dev = [
    "coverage==7.3.4",
    "pip==23.3.2",
    "pipx==1.3.3",
    "pip-tools==7.3.0",  # To add hashes to requirements
    "unittest-xml-reporting==3.2.0",  # Needed to generate JUnit XML output for Sonarcloud.io
]
tools = [
    "bandit==1.7.6",
    "mypy==1.7.1",
    "pip-audit==2.6.2",
    "pydantic==2.5.2",  # Needed because pipx needs to inject Pydantic into the mpyp venv, see ci/quality.sh
    "ruff==0.1.8",
    "safety==2.3.5",
    "vulture==2.10"
]

[tool.mypy]
plugins = "pydantic.mypy"
ignore_missing_imports = false
incremental = false
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

[tool.ruff]
target-version = "py311"
line-length = 120
select = ["ALL"]
src = ["src"]
ignore = [
    "ANN101",  # https://docs.astral.sh/ruff/rules/missing-type-function-argument/ - type checkers can infer the type of `self`, so annotating it is superfluous
    "COM812",  # https://docs.astral.sh/ruff/rules/missing-trailing-comma/ - this rule may cause conflicts when used with the ruff formatter
    "D203",    # https://docs.astral.sh/ruff/rules/one-blank-line-before-class/ - prevent warning: `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible. Ignoring `one-blank-line-before-class`
    "D213",    # https://docs.astral.sh/ruff/rules/multi-line-summary-second-line/ - prevent warning: `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible. Ignoring `multi-line-summary-second-line`
    "FBT",     # https://docs.astral.sh/ruff/rules/#flake8-boolean-trap-fbt - not sure of the value of preventing "boolean traps"
    "ISC001",  # https://docs.astral.sh/ruff/rules/single-line-implicit-string-concatenation/ - this rule may cause conflicts when used with the ruff formatter
    "PD",      # https://docs.astral.sh/ruff/rules/#pandas-vet-pd - pandas isn't used
    "PT",      # https://docs.astral.sh/ruff/rules/#flake8-pytest-style-pt - pytest isn't used
]

[tool.ruff.isort]
section-order = ["future", "standard-library", "third-party", "second-party", "first-party", "tests", "local-folder"]

[tool.ruff.isort.sections]
"second-party" = ["shared", "shared_data_model"]
"tests" = ["tests"]

[tool.ruff.per-file-ignores]
".vulture_ignore_list.py" = ["ALL"]
"__init__.py" = [
    "D104",  # https://docs.astral.sh/ruff/rules/undocumented-public-package/ - don't require doc strings in __init__.py files
]
"src/conf.py" = [
    "INP001",  # https://docs.astral.sh/ruff/rules/implicit-namespace-package/ - false positive because this is a configuration file
]
"src/create_reference_md.py" = [
    "INP001",  # https://docs.astral.sh/ruff/rules/implicit-namespace-package/ - false positive because this is a script
]
"tests/**/*.py" = [
    "ANN201",  # https://docs.astral.sh/ruff/rules/missing-return-type-undocumented-public-function/ - don't require test functions to have return types
]
